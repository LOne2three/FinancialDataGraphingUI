@model IndexViewModel
@{
    var item = ViewBag.Items;
}

<form method="post">
    <div class="border p-3 mt-4">
    @*    <div class="row pb-2">
            <h2 class="text-primary"></h2>
        </div>*@
  @*      <div asp-validation-summary="All"></div>*@
        <div class="mb-3">
            <label asp-for="symbol">Symbol</label>
            <input asp-for="symbol" class="form-control" />
            <span asp-validation-for="symbol" class="text-danger"></span>
        </div>
        <div class="mb-3">
              <label asp-for="interval"></label>
            <select asp-for="interval" asp-items="@item" class="form-select">
              <option disabled selected>--Select interval--</option>
            </select>
            <span asp-validation-for="interval" class="text-danger"></span>
        </div>
   
        <button id="btnCreateChart" type="submit" class="btn btn-primary" style="width:150px">Graph</button>


    </div>
</form>

    <div class="col-md-9">
        <div id="chart" style="width:100%;height:700px;overflow:hidden;padding:10px">
            <div id="candlestick" style="height:55%"></div>
            <div id="volume" style="height:30%;margin-top:-1%"></div>
            <div id="filter" style="height:15%;margin-top:1%"></div>
        </div>
    </div>
@section scripts{
    <script type="text/javascript" src="https://www.gstatic.com/charts/loader.js"></script>
    <script type="text/javascript">
         google.charts.load('current', { 'packages': ['corechart', 'controls'] });
         google.charts.setOnLoadCallback(drawChart);
       var chart_div = document.getElementById('chart');

  function drawChart() {
     var data = new google.visualization.DataTable();
                data.addColumn('datetime', 'Date');
                data.addColumn('number', 'Open');
                data.addColumn('number', 'High');
                data.addColumn('number', 'Low');
                data.addColumn('number', 'Close');
                data.addColumn('number', 'Volume');

      var obj = @(Html.Raw(Newtonsoft.Json.JsonConvert.SerializeObject(Model?.root.values)))
          console.log(obj);
      if (obj!= null) {
          obj.forEach(function(v) {

              data.addRow([new Date(v.datetime), parseInt(v.open), parseInt(v.high), parseInt(v.low), parseInt(v.close), parseInt(v.volume)]);
              console.log(data);
          }



          );
      }
      

    var dashboard = new google.visualization.Dashboard(chart_div);
     var control = new google.visualization.ControlWrapper({
                        controlType: 'ChartRangeFilter',
                        containerId: 'filter',
                        options: {
                            filterColumnIndex: 0,
                            ui: {
                                chartType: 'LineChart',
                                chartOptions: {
                                    chartArea: {
                                        height: '80%', width: '85%', left: 100,
                                        backgroundColor: { stroke: "gray", strokeWidth: 1 }
                                    },
                                    hAxis: { baselineColor: 'none' }
                                },
                                chartView: { columns: [0, 4] },
                            }
                        }
                    });

                    var chart = new google.visualization.ChartWrapper({
                        chartType: 'CandlestickChart',
                        containerId: 'candlestick',
                        options: {
                            chartArea: { height: '150', width: '85%', left: 100, 
                                         backgroundColor: { stroke: "gray", strokeWidth: 1 } },
                            hAxis: { type: 'category', slantedText: false, maxTextLines: 1, 
                                     maxAlternation: 1 },
                            legend: { position: 'none' },
                            candlestick: {
                                fallingColor: { strokeWidth: 0, fill: '#a52714' },
                                risingColor: { strokeWidth: 0, fill: '#0f9d58' }
                            },
                            title: 'Stock Price: ',
                        },
                        view: { columns: [0,3,1,4,2] }
                    });

                    var volume = new google.visualization.ChartWrapper({
                        chartType: 'ColumnChart',
                        containerId: 'volume',
                        options: {
                            chartArea: { height: '80%', width: '85%', left: 100, top: 40, bottom: 30, 
                                         backgroundColor: { stroke: "gray", strokeWidth: 1 } },
                            hAxis: { type: 'category', slantedText: false, maxTextLines: 1, 
                                     maxAlternation: 1 },
                            legend: { position: 'none' },
                            title: "Volume: "
                        },
                        view: { columns: [0, 5] }
                    });


    dashboard.bind(control, [chart, volume]);
    dashboard.draw(data);

  }
    </script>
    }



               
                    

            
        

